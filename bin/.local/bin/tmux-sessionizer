#!/usr/bin/bash
find_param="-mindepth 1 -maxdepth 1 -type d"
dir_list_rec=(
  ~/.config/
  ~/dotfiles/
  ~/work/
  ~/apps/
  ~/ownCloud/
  ~/ownCloud/config
  ~/ownCloud/programming/projects
  ~/ownCloud/programming/courses
  ~/qmk_firmware/keyboards/planck/rev7/keymaps/
)

#!/usr/bin/env bash
switch_to() {
  if [[ -z $TMUX ]]; then
    tmux attach-session -t $1
  else
    tmux switch-client -t $1
  fi
}

has_session() {
  tmux list-sessions | grep -q "^$1:"
}

hydrate() {
  if [ -f $2/.tmux-sessionizer ]; then
    tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
  elif [ -f $HOME/.tmux-sessionizer ]; then
    tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
  fi
}

if [[ $# -eq 1 ]]; then
  selected=$1
else
  # If someone wants to make this extensible, i'll accept
  # PR
  dir_list=$(find ${dir_list_rec[@]} $find_param)
  echo "$dir_list"
  # dir_list_rec    # places=$(echo $dir_list_rec)
  # echo $places
  selected=$(echo "${dir_list[@]}" | fzf)

fi

if [[ -z $selected ]]; then
  exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
  tmux new-session -s $selected_name -c $selected
  hydrate $selected_name $selected
  exit 0
fi

if ! has_session $selected_name; then
  tmux new-session -ds $selected_name -c $selected
  hydrate $selected_name $selected
fi

switch_to $selected_name
